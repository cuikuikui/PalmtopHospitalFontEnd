{"version":3,"sources":["uni-app:///pagesC/components/tki-qrcode/qrcode.js"],"names":["QRCode","unicodeFormat8","code","c0","c1","c2","getUTF8Bytes","string","utf8codes","i","length","charCodeAt","utf8","j","push","QRCodeAlg","data","errorCorrectLevel","this","typeNumber","modules","moduleCount","dataCache","rsBlocks","totalDataCount","utf8bytes","make","prototype","constructor","getModuleCount","getRightType","createData","createQrcode","makeImpl","maskPattern","Array","row","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","mapData","col","r","c","minLostPoint","pattern","bestModules","lostPoint","QRUtil","getLostPoint","pos","getPatternPosition","test","bits","getBCHTypeNumber","mod","Math","floor","QRErrorCorrectLevel","getBCHTypeInfo","buffer","QRBitBuffer","lengthBits","put","l","putBit","PAD0","PAD1","createBytes","offset","maxDcCount","maxEcCount","rsBlock","count","totalCount","dataCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","QRPolynomial","getLength","modPoly","modIndex","get","index","inc","bitIndex","byteIndex","dark","mask","getMask","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","Error","errorCorrectLength","a","multiply","QRMath","gexp","qrCode","darkCount","sameCount","head","current","ratio","abs","glog","n","LOG_TABLE","EXP_TABLE","num","shift","undefined","e","tl","el","RS_BLOCK_TABLE","lengthBytes","bufIndex","bit","qrcodeAlgObjCache","opt","options","text","size","correctLevel","background","foreground","pdground","image","imageSize","canvasId","context","usingComponents","showLoading","loadingText","qrCodeAlg","obj","getForeGround","config","createCanvas","uni","title","ctx","createCanvasContext","ratioSize","ratioImgSize","tileW","toPrecision","tileH","w","ceil","h","setFillStyle","fillRect","round","drawRoundedRect","ctxi","x","y","width","height","lineWidth","fill","stroke","setLineWidth","setStrokeStyle","beginPath","moveTo","arcTo","closePath","Number","toFixed","drawImage","setTimeout","draw","canvasToTempFilePath","destWidth","destHeight","quality","success","res","cbResult","tempFilePath","fail","complete","hideLoading","clear","fn","clearRect"],"mappings":"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","file":"pagesC/common/vendor.js","sourcesContent":["let QRCode = {};\r\n(function () {\r\n    /**\r\n     * 获取单个字符的utf8编码\r\n     * unicode BMP平面约65535个字符\r\n     * @param {num} code\r\n     * return {array}\r\n     */\r\n    function unicodeFormat8(code) {\r\n        // 1 byte\r\n        var c0, c1, c2;\r\n        if (code < 128) {\r\n            return [code];\r\n            // 2 bytes\r\n        } else if (code < 2048) {\r\n            c0 = 192 + (code >> 6);\r\n            c1 = 128 + (code & 63);\r\n            return [c0, c1];\r\n            // 3 bytes\r\n        } else {\r\n            c0 = 224 + (code >> 12);\r\n            c1 = 128 + (code >> 6 & 63);\r\n            c2 = 128 + (code & 63);\r\n            return [c0, c1, c2];\r\n        }\r\n    }\r\n    /**\r\n     * 获取字符串的utf8编码字节串\r\n     * @param {string} string\r\n     * @return {array}\r\n     */\r\n    function getUTF8Bytes(string) {\r\n        var utf8codes = [];\r\n        for (var i = 0; i < string.length; i++) {\r\n            var code = string.charCodeAt(i);\r\n            var utf8 = unicodeFormat8(code);\r\n            for (var j = 0; j < utf8.length; j++) {\r\n                utf8codes.push(utf8[j]);\r\n            }\r\n        }\r\n        return utf8codes;\r\n    }\r\n    /**\r\n     * 二维码算法实现\r\n     * @param {string} data              要编码的信息字符串\r\n     * @param {num} errorCorrectLevel 纠错等级\r\n     */\r\n    function QRCodeAlg(data, errorCorrectLevel) {\r\n        this.typeNumber = -1; //版本\r\n        this.errorCorrectLevel = errorCorrectLevel;\r\n        this.modules = null; //二维矩阵，存放最终结果\r\n        this.moduleCount = 0; //矩阵大小\r\n        this.dataCache = null; //数据缓存\r\n        this.rsBlocks = null; //版本数据信息\r\n        this.totalDataCount = -1; //可使用的数据量\r\n        this.data = data;\r\n        this.utf8bytes = getUTF8Bytes(data);\r\n        this.make();\r\n    }\r\n    QRCodeAlg.prototype = {\r\n        constructor: QRCodeAlg,\r\n        /**\r\n         * 获取二维码矩阵大小\r\n         * @return {num} 矩阵大小\r\n         */\r\n        getModuleCount: function () {\r\n            return this.moduleCount;\r\n        },\r\n        /**\r\n         * 编码\r\n         */\r\n        make: function () {\r\n            this.getRightType();\r\n            this.dataCache = this.createData();\r\n            this.createQrcode();\r\n        },\r\n        /**\r\n         * 设置二位矩阵功能图形\r\n         * @param  {bool} test 表示是否在寻找最好掩膜阶段\r\n         * @param  {num} maskPattern 掩膜的版本\r\n         */\r\n        makeImpl: function (maskPattern) {\r\n            this.moduleCount = this.typeNumber * 4 + 17;\r\n            this.modules = new Array(this.moduleCount);\r\n            for (var row = 0; row < this.moduleCount; row++) {\r\n                this.modules[row] = new Array(this.moduleCount);\r\n            }\r\n            this.setupPositionProbePattern(0, 0);\r\n            this.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n            this.setupPositionProbePattern(0, this.moduleCount - 7);\r\n            this.setupPositionAdjustPattern();\r\n            this.setupTimingPattern();\r\n            this.setupTypeInfo(true, maskPattern);\r\n            if (this.typeNumber >= 7) {\r\n                this.setupTypeNumber(true);\r\n            }\r\n            this.mapData(this.dataCache, maskPattern);\r\n        },\r\n        /**\r\n         * 设置二维码的位置探测图形\r\n         * @param  {num} row 探测图形的中心横坐标\r\n         * @param  {num} col 探测图形的中心纵坐标\r\n         */\r\n        setupPositionProbePattern: function (row, col) {\r\n            for (var r = -1; r <= 7; r++) {\r\n                if (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n                for (var c = -1; c <= 7; c++) {\r\n                    if (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n                    if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\r\n                        this.modules[row + r][col + c] = true;\r\n                    } else {\r\n                        this.modules[row + r][col + c] = false;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * 创建二维码\r\n         * @return {[type]} [description]\r\n         */\r\n        createQrcode: function () {\r\n            var minLostPoint = 0;\r\n            var pattern = 0;\r\n            var bestModules = null;\r\n            for (var i = 0; i < 8; i++) {\r\n                this.makeImpl(i);\r\n                var lostPoint = QRUtil.getLostPoint(this);\r\n                if (i == 0 || minLostPoint > lostPoint) {\r\n                    minLostPoint = lostPoint;\r\n                    pattern = i;\r\n                    bestModules = this.modules;\r\n                }\r\n            }\r\n            this.modules = bestModules;\r\n            this.setupTypeInfo(false, pattern);\r\n            if (this.typeNumber >= 7) {\r\n                this.setupTypeNumber(false);\r\n            }\r\n        },\r\n        /**\r\n         * 设置定位图形\r\n         * @return {[type]} [description]\r\n         */\r\n        setupTimingPattern: function () {\r\n            for (var r = 8; r < this.moduleCount - 8; r++) {\r\n                if (this.modules[r][6] != null) {\r\n                    continue;\r\n                }\r\n                this.modules[r][6] = (r % 2 == 0);\r\n                if (this.modules[6][r] != null) {\r\n                    continue;\r\n                }\r\n                this.modules[6][r] = (r % 2 == 0);\r\n            }\r\n        },\r\n        /**\r\n         * 设置矫正图形\r\n         * @return {[type]} [description]\r\n         */\r\n        setupPositionAdjustPattern: function () {\r\n            var pos = QRUtil.getPatternPosition(this.typeNumber);\r\n            for (var i = 0; i < pos.length; i++) {\r\n                for (var j = 0; j < pos.length; j++) {\r\n                    var row = pos[i];\r\n                    var col = pos[j];\r\n                    if (this.modules[row][col] != null) {\r\n                        continue;\r\n                    }\r\n                    for (var r = -2; r <= 2; r++) {\r\n                        for (var c = -2; c <= 2; c++) {\r\n                            if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\r\n                                this.modules[row + r][col + c] = true;\r\n                            } else {\r\n                                this.modules[row + r][col + c] = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * 设置版本信息（7以上版本才有）\r\n         * @param  {bool} test 是否处于判断最佳掩膜阶段\r\n         * @return {[type]}      [description]\r\n         */\r\n        setupTypeNumber: function (test) {\r\n            var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\r\n            for (var i = 0; i < 18; i++) {\r\n                var mod = (!test && ((bits >> i) & 1) == 1);\r\n                this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n                this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n            }\r\n        },\r\n        /**\r\n         * 设置格式信息（纠错等级和掩膜版本）\r\n         * @param  {bool} test\r\n         * @param  {num} maskPattern 掩膜版本\r\n         * @return {}\r\n         */\r\n        setupTypeInfo: function (test, maskPattern) {\r\n            var data = (QRErrorCorrectLevel[this.errorCorrectLevel] << 3) | maskPattern;\r\n            var bits = QRUtil.getBCHTypeInfo(data);\r\n            // vertical\r\n            for (var i = 0; i < 15; i++) {\r\n                var mod = (!test && ((bits >> i) & 1) == 1);\r\n                if (i < 6) {\r\n                    this.modules[i][8] = mod;\r\n                } else if (i < 8) {\r\n                    this.modules[i + 1][8] = mod;\r\n                } else {\r\n                    this.modules[this.moduleCount - 15 + i][8] = mod;\r\n                }\r\n                // horizontal\r\n                var mod = (!test && ((bits >> i) & 1) == 1);\r\n                if (i < 8) {\r\n                    this.modules[8][this.moduleCount - i - 1] = mod;\r\n                } else if (i < 9) {\r\n                    this.modules[8][15 - i - 1 + 1] = mod;\r\n                } else {\r\n                    this.modules[8][15 - i - 1] = mod;\r\n                }\r\n            }\r\n            // fixed module\r\n            this.modules[this.moduleCount - 8][8] = (!test);\r\n        },\r\n        /**\r\n         * 数据编码\r\n         * @return {[type]} [description]\r\n         */\r\n        createData: function () {\r\n            var buffer = new QRBitBuffer();\r\n            var lengthBits = this.typeNumber > 9 ? 16 : 8;\r\n            buffer.put(4, 4); //添加模式\r\n            buffer.put(this.utf8bytes.length, lengthBits);\r\n            for (var i = 0, l = this.utf8bytes.length; i < l; i++) {\r\n                buffer.put(this.utf8bytes[i], 8);\r\n            }\r\n            if (buffer.length + 4 <= this.totalDataCount * 8) {\r\n                buffer.put(0, 4);\r\n            }\r\n            // padding\r\n            while (buffer.length % 8 != 0) {\r\n                buffer.putBit(false);\r\n            }\r\n            // padding\r\n            while (true) {\r\n                if (buffer.length >= this.totalDataCount * 8) {\r\n                    break;\r\n                }\r\n                buffer.put(QRCodeAlg.PAD0, 8);\r\n                if (buffer.length >= this.totalDataCount * 8) {\r\n                    break;\r\n                }\r\n                buffer.put(QRCodeAlg.PAD1, 8);\r\n            }\r\n            return this.createBytes(buffer);\r\n        },\r\n        /**\r\n         * 纠错码编码\r\n         * @param  {buffer} buffer 数据编码\r\n         * @return {[type]}\r\n         */\r\n        createBytes: function (buffer) {\r\n            var offset = 0;\r\n            var maxDcCount = 0;\r\n            var maxEcCount = 0;\r\n            var length = this.rsBlock.length / 3;\r\n            var rsBlocks = new Array();\r\n            for (var i = 0; i < length; i++) {\r\n                var count = this.rsBlock[i * 3 + 0];\r\n                var totalCount = this.rsBlock[i * 3 + 1];\r\n                var dataCount = this.rsBlock[i * 3 + 2];\r\n                for (var j = 0; j < count; j++) {\r\n                    rsBlocks.push([dataCount, totalCount]);\r\n                }\r\n            }\r\n            var dcdata = new Array(rsBlocks.length);\r\n            var ecdata = new Array(rsBlocks.length);\r\n            for (var r = 0; r < rsBlocks.length; r++) {\r\n                var dcCount = rsBlocks[r][0];\r\n                var ecCount = rsBlocks[r][1] - dcCount;\r\n                maxDcCount = Math.max(maxDcCount, dcCount);\r\n                maxEcCount = Math.max(maxEcCount, ecCount);\r\n                dcdata[r] = new Array(dcCount);\r\n                for (var i = 0; i < dcdata[r].length; i++) {\r\n                    dcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n                }\r\n                offset += dcCount;\r\n                var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\r\n                var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\r\n                var modPoly = rawPoly.mod(rsPoly);\r\n                ecdata[r] = new Array(rsPoly.getLength() - 1);\r\n                for (var i = 0; i < ecdata[r].length; i++) {\r\n                    var modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n                    ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\r\n                }\r\n            }\r\n            var data = new Array(this.totalDataCount);\r\n            var index = 0;\r\n            for (var i = 0; i < maxDcCount; i++) {\r\n                for (var r = 0; r < rsBlocks.length; r++) {\r\n                    if (i < dcdata[r].length) {\r\n                        data[index++] = dcdata[r][i];\r\n                    }\r\n                }\r\n            }\r\n            for (var i = 0; i < maxEcCount; i++) {\r\n                for (var r = 0; r < rsBlocks.length; r++) {\r\n                    if (i < ecdata[r].length) {\r\n                        data[index++] = ecdata[r][i];\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n\r\n        },\r\n        /**\r\n         * 布置模块，构建最终信息\r\n         * @param  {} data\r\n         * @param  {} maskPattern\r\n         * @return {}\r\n         */\r\n        mapData: function (data, maskPattern) {\r\n            var inc = -1;\r\n            var row = this.moduleCount - 1;\r\n            var bitIndex = 7;\r\n            var byteIndex = 0;\r\n            for (var col = this.moduleCount - 1; col > 0; col -= 2) {\r\n                if (col == 6) col--;\r\n                while (true) {\r\n                    for (var c = 0; c < 2; c++) {\r\n                        if (this.modules[row][col - c] == null) {\r\n                            var dark = false;\r\n                            if (byteIndex < data.length) {\r\n                                dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\r\n                            }\r\n                            var mask = QRUtil.getMask(maskPattern, row, col - c);\r\n                            if (mask) {\r\n                                dark = !dark;\r\n                            }\r\n                            this.modules[row][col - c] = dark;\r\n                            bitIndex--;\r\n                            if (bitIndex == -1) {\r\n                                byteIndex++;\r\n                                bitIndex = 7;\r\n                            }\r\n                        }\r\n                    }\r\n                    row += inc;\r\n                    if (row < 0 || this.moduleCount <= row) {\r\n                        row -= inc;\r\n                        inc = -inc;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * 填充字段\r\n     */\r\n    QRCodeAlg.PAD0 = 0xEC;\r\n    QRCodeAlg.PAD1 = 0x11;\r\n    //---------------------------------------------------------------------\r\n    // 纠错等级对应的编码\r\n    //---------------------------------------------------------------------\r\n    var QRErrorCorrectLevel = [1, 0, 3, 2];\r\n    //---------------------------------------------------------------------\r\n    // 掩膜版本\r\n    //---------------------------------------------------------------------\r\n    var QRMaskPattern = {\r\n        PATTERN000: 0,\r\n        PATTERN001: 1,\r\n        PATTERN010: 2,\r\n        PATTERN011: 3,\r\n        PATTERN100: 4,\r\n        PATTERN101: 5,\r\n        PATTERN110: 6,\r\n        PATTERN111: 7\r\n    };\r\n    //---------------------------------------------------------------------\r\n    // 工具类\r\n    //---------------------------------------------------------------------\r\n    var QRUtil = {\r\n        /*\r\n        每个版本矫正图形的位置\r\n         */\r\n        PATTERN_POSITION_TABLE: [\r\n            [],\r\n            [6, 18],\r\n            [6, 22],\r\n            [6, 26],\r\n            [6, 30],\r\n            [6, 34],\r\n            [6, 22, 38],\r\n            [6, 24, 42],\r\n            [6, 26, 46],\r\n            [6, 28, 50],\r\n            [6, 30, 54],\r\n            [6, 32, 58],\r\n            [6, 34, 62],\r\n            [6, 26, 46, 66],\r\n            [6, 26, 48, 70],\r\n            [6, 26, 50, 74],\r\n            [6, 30, 54, 78],\r\n            [6, 30, 56, 82],\r\n            [6, 30, 58, 86],\r\n            [6, 34, 62, 90],\r\n            [6, 28, 50, 72, 94],\r\n            [6, 26, 50, 74, 98],\r\n            [6, 30, 54, 78, 102],\r\n            [6, 28, 54, 80, 106],\r\n            [6, 32, 58, 84, 110],\r\n            [6, 30, 58, 86, 114],\r\n            [6, 34, 62, 90, 118],\r\n            [6, 26, 50, 74, 98, 122],\r\n            [6, 30, 54, 78, 102, 126],\r\n            [6, 26, 52, 78, 104, 130],\r\n            [6, 30, 56, 82, 108, 134],\r\n            [6, 34, 60, 86, 112, 138],\r\n            [6, 30, 58, 86, 114, 142],\r\n            [6, 34, 62, 90, 118, 146],\r\n            [6, 30, 54, 78, 102, 126, 150],\r\n            [6, 24, 50, 76, 102, 128, 154],\r\n            [6, 28, 54, 80, 106, 132, 158],\r\n            [6, 32, 58, 84, 110, 136, 162],\r\n            [6, 26, 54, 82, 110, 138, 166],\r\n            [6, 30, 58, 86, 114, 142, 170]\r\n        ],\r\n        G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\r\n        G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\r\n        G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\r\n        /*\r\n        BCH编码格式信息\r\n         */\r\n        getBCHTypeInfo: function (data) {\r\n            var d = data << 10;\r\n            while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\r\n                d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\r\n            }\r\n            return ((data << 10) | d) ^ QRUtil.G15_MASK;\r\n        },\r\n        /*\r\n        BCH编码版本信息\r\n         */\r\n        getBCHTypeNumber: function (data) {\r\n            var d = data << 12;\r\n            while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\r\n                d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\r\n            }\r\n            return (data << 12) | d;\r\n        },\r\n        /*\r\n        获取BCH位信息\r\n         */\r\n        getBCHDigit: function (data) {\r\n            var digit = 0;\r\n            while (data != 0) {\r\n                digit++;\r\n                data >>>= 1;\r\n            }\r\n            return digit;\r\n        },\r\n        /*\r\n        获取版本对应的矫正图形位置\r\n         */\r\n        getPatternPosition: function (typeNumber) {\r\n            return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\r\n        },\r\n        /*\r\n        掩膜算法\r\n         */\r\n        getMask: function (maskPattern, i, j) {\r\n            switch (maskPattern) {\r\n                case QRMaskPattern.PATTERN000:\r\n                    return (i + j) % 2 == 0;\r\n                case QRMaskPattern.PATTERN001:\r\n                    return i % 2 == 0;\r\n                case QRMaskPattern.PATTERN010:\r\n                    return j % 3 == 0;\r\n                case QRMaskPattern.PATTERN011:\r\n                    return (i + j) % 3 == 0;\r\n                case QRMaskPattern.PATTERN100:\r\n                    return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\r\n                case QRMaskPattern.PATTERN101:\r\n                    return (i * j) % 2 + (i * j) % 3 == 0;\r\n                case QRMaskPattern.PATTERN110:\r\n                    return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\r\n                case QRMaskPattern.PATTERN111:\r\n                    return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\r\n                default:\r\n                    throw new Error(\"bad maskPattern:\" + maskPattern);\r\n            }\r\n        },\r\n        /*\r\n        获取RS的纠错多项式\r\n         */\r\n        getErrorCorrectPolynomial: function (errorCorrectLength) {\r\n            var a = new QRPolynomial([1], 0);\r\n            for (var i = 0; i < errorCorrectLength; i++) {\r\n                a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\r\n            }\r\n            return a;\r\n        },\r\n        /*\r\n        获取评价\r\n         */\r\n        getLostPoint: function (qrCode) {\r\n            var moduleCount = qrCode.getModuleCount(),\r\n                lostPoint = 0,\r\n                darkCount = 0;\r\n            for (var row = 0; row < moduleCount; row++) {\r\n                var sameCount = 0;\r\n                var head = qrCode.modules[row][0];\r\n                for (var col = 0; col < moduleCount; col++) {\r\n                    var current = qrCode.modules[row][col];\r\n                    //level 3 评价\r\n                    if (col < moduleCount - 6) {\r\n                        if (current && !qrCode.modules[row][col + 1] && qrCode.modules[row][col + 2] && qrCode.modules[row][col + 3] && qrCode.modules[row][col + 4] && !qrCode.modules[row][col + 5] && qrCode.modules[row][col + 6]) {\r\n                            if (col < moduleCount - 10) {\r\n                                if (qrCode.modules[row][col + 7] && qrCode.modules[row][col + 8] && qrCode.modules[row][col + 9] && qrCode.modules[row][col + 10]) {\r\n                                    lostPoint += 40;\r\n                                }\r\n                            } else if (col > 3) {\r\n                                if (qrCode.modules[row][col - 1] && qrCode.modules[row][col - 2] && qrCode.modules[row][col - 3] && qrCode.modules[row][col - 4]) {\r\n                                    lostPoint += 40;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //level 2 评价\r\n                    if ((row < moduleCount - 1) && (col < moduleCount - 1)) {\r\n                        var count = 0;\r\n                        if (current) count++;\r\n                        if (qrCode.modules[row + 1][col]) count++;\r\n                        if (qrCode.modules[row][col + 1]) count++;\r\n                        if (qrCode.modules[row + 1][col + 1]) count++;\r\n                        if (count == 0 || count == 4) {\r\n                            lostPoint += 3;\r\n                        }\r\n                    }\r\n                    //level 1 评价\r\n                    if (head ^ current) {\r\n                        sameCount++;\r\n                    } else {\r\n                        head = current;\r\n                        if (sameCount >= 5) {\r\n                            lostPoint += (3 + sameCount - 5);\r\n                        }\r\n                        sameCount = 1;\r\n                    }\r\n                    //level 4 评价\r\n                    if (current) {\r\n                        darkCount++;\r\n                    }\r\n                }\r\n            }\r\n            for (var col = 0; col < moduleCount; col++) {\r\n                var sameCount = 0;\r\n                var head = qrCode.modules[0][col];\r\n                for (var row = 0; row < moduleCount; row++) {\r\n                    var current = qrCode.modules[row][col];\r\n                    //level 3 评价\r\n                    if (row < moduleCount - 6) {\r\n                        if (current && !qrCode.modules[row + 1][col] && qrCode.modules[row + 2][col] && qrCode.modules[row + 3][col] && qrCode.modules[row + 4][col] && !qrCode.modules[row + 5][col] && qrCode.modules[row + 6][col]) {\r\n                            if (row < moduleCount - 10) {\r\n                                if (qrCode.modules[row + 7][col] && qrCode.modules[row + 8][col] && qrCode.modules[row + 9][col] && qrCode.modules[row + 10][col]) {\r\n                                    lostPoint += 40;\r\n                                }\r\n                            } else if (row > 3) {\r\n                                if (qrCode.modules[row - 1][col] && qrCode.modules[row - 2][col] && qrCode.modules[row - 3][col] && qrCode.modules[row - 4][col]) {\r\n                                    lostPoint += 40;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //level 1 评价\r\n                    if (head ^ current) {\r\n                        sameCount++;\r\n                    } else {\r\n                        head = current;\r\n                        if (sameCount >= 5) {\r\n                            lostPoint += (3 + sameCount - 5);\r\n                        }\r\n                        sameCount = 1;\r\n                    }\r\n                }\r\n            }\r\n            // LEVEL4\r\n            var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\r\n            lostPoint += ratio * 10;\r\n            return lostPoint;\r\n        }\r\n\r\n    };\r\n    //---------------------------------------------------------------------\r\n    // QRMath使用的数学工具\r\n    //---------------------------------------------------------------------\r\n    var QRMath = {\r\n        /*\r\n        将n转化为a^m\r\n         */\r\n        glog: function (n) {\r\n            if (n < 1) {\r\n                throw new Error(\"glog(\" + n + \")\");\r\n            }\r\n            return QRMath.LOG_TABLE[n];\r\n        },\r\n        /*\r\n        将a^m转化为n\r\n         */\r\n        gexp: function (n) {\r\n            while (n < 0) {\r\n                n += 255;\r\n            }\r\n            while (n >= 256) {\r\n                n -= 255;\r\n            }\r\n            return QRMath.EXP_TABLE[n];\r\n        },\r\n        EXP_TABLE: new Array(256),\r\n        LOG_TABLE: new Array(256)\r\n\r\n    };\r\n    for (var i = 0; i < 8; i++) {\r\n        QRMath.EXP_TABLE[i] = 1 << i;\r\n    }\r\n    for (var i = 8; i < 256; i++) {\r\n        QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\r\n    }\r\n    for (var i = 0; i < 255; i++) {\r\n        QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\r\n    }\r\n    //---------------------------------------------------------------------\r\n    // QRPolynomial 多项式\r\n    //---------------------------------------------------------------------\r\n    /**\r\n     * 多项式类\r\n     * @param {Array} num   系数\r\n     * @param {num} shift a^shift\r\n     */\r\n    function QRPolynomial(num, shift) {\r\n        if (num.length == undefined) {\r\n            throw new Error(num.length + \"/\" + shift);\r\n        }\r\n        var offset = 0;\r\n        while (offset < num.length && num[offset] == 0) {\r\n            offset++;\r\n        }\r\n        this.num = new Array(num.length - offset + shift);\r\n        for (var i = 0; i < num.length - offset; i++) {\r\n            this.num[i] = num[i + offset];\r\n        }\r\n    }\r\n    QRPolynomial.prototype = {\r\n        get: function (index) {\r\n            return this.num[index];\r\n        },\r\n        getLength: function () {\r\n            return this.num.length;\r\n        },\r\n        /**\r\n         * 多项式乘法\r\n         * @param  {QRPolynomial} e 被乘多项式\r\n         * @return {[type]}   [description]\r\n         */\r\n        multiply: function (e) {\r\n            var num = new Array(this.getLength() + e.getLength() - 1);\r\n            for (var i = 0; i < this.getLength(); i++) {\r\n                for (var j = 0; j < e.getLength(); j++) {\r\n                    num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\r\n                }\r\n            }\r\n            return new QRPolynomial(num, 0);\r\n        },\r\n        /**\r\n         * 多项式模运算\r\n         * @param  {QRPolynomial} e 模多项式\r\n         * @return {}\r\n         */\r\n        mod: function (e) {\r\n            var tl = this.getLength(),\r\n                el = e.getLength();\r\n            if (tl - el < 0) {\r\n                return this;\r\n            }\r\n            var num = new Array(tl);\r\n            for (var i = 0; i < tl; i++) {\r\n                num[i] = this.get(i);\r\n            }\r\n            while (num.length >= el) {\r\n                var ratio = QRMath.glog(num[0]) - QRMath.glog(e.get(0));\r\n\r\n                for (var i = 0; i < e.getLength(); i++) {\r\n                    num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\r\n                }\r\n                while (num[0] == 0) {\r\n                    num.shift();\r\n                }\r\n            }\r\n            return new QRPolynomial(num, 0);\r\n        }\r\n    };\r\n\r\n    //---------------------------------------------------------------------\r\n    // RS_BLOCK_TABLE\r\n    //---------------------------------------------------------------------\r\n    /*\r\n    二维码各个版本信息[块数, 每块中的数据块数, 每块中的信息块数]\r\n     */\r\n    var RS_BLOCK_TABLE = [\r\n        // L\r\n        // M\r\n        // Q\r\n        // H\r\n        // 1\r\n        [1, 26, 19],\r\n        [1, 26, 16],\r\n        [1, 26, 13],\r\n        [1, 26, 9],\r\n\r\n        // 2\r\n        [1, 44, 34],\r\n        [1, 44, 28],\r\n        [1, 44, 22],\r\n        [1, 44, 16],\r\n\r\n        // 3\r\n        [1, 70, 55],\r\n        [1, 70, 44],\r\n        [2, 35, 17],\r\n        [2, 35, 13],\r\n\r\n        // 4\r\n        [1, 100, 80],\r\n        [2, 50, 32],\r\n        [2, 50, 24],\r\n        [4, 25, 9],\r\n\r\n        // 5\r\n        [1, 134, 108],\r\n        [2, 67, 43],\r\n        [2, 33, 15, 2, 34, 16],\r\n        [2, 33, 11, 2, 34, 12],\r\n\r\n        // 6\r\n        [2, 86, 68],\r\n        [4, 43, 27],\r\n        [4, 43, 19],\r\n        [4, 43, 15],\r\n\r\n        // 7\r\n        [2, 98, 78],\r\n        [4, 49, 31],\r\n        [2, 32, 14, 4, 33, 15],\r\n        [4, 39, 13, 1, 40, 14],\r\n\r\n        // 8\r\n        [2, 121, 97],\r\n        [2, 60, 38, 2, 61, 39],\r\n        [4, 40, 18, 2, 41, 19],\r\n        [4, 40, 14, 2, 41, 15],\r\n\r\n        // 9\r\n        [2, 146, 116],\r\n        [3, 58, 36, 2, 59, 37],\r\n        [4, 36, 16, 4, 37, 17],\r\n        [4, 36, 12, 4, 37, 13],\r\n\r\n        // 10\r\n        [2, 86, 68, 2, 87, 69],\r\n        [4, 69, 43, 1, 70, 44],\r\n        [6, 43, 19, 2, 44, 20],\r\n        [6, 43, 15, 2, 44, 16],\r\n\r\n        // 11\r\n        [4, 101, 81],\r\n        [1, 80, 50, 4, 81, 51],\r\n        [4, 50, 22, 4, 51, 23],\r\n        [3, 36, 12, 8, 37, 13],\r\n\r\n        // 12\r\n        [2, 116, 92, 2, 117, 93],\r\n        [6, 58, 36, 2, 59, 37],\r\n        [4, 46, 20, 6, 47, 21],\r\n        [7, 42, 14, 4, 43, 15],\r\n\r\n        // 13\r\n        [4, 133, 107],\r\n        [8, 59, 37, 1, 60, 38],\r\n        [8, 44, 20, 4, 45, 21],\r\n        [12, 33, 11, 4, 34, 12],\r\n\r\n        // 14\r\n        [3, 145, 115, 1, 146, 116],\r\n        [4, 64, 40, 5, 65, 41],\r\n        [11, 36, 16, 5, 37, 17],\r\n        [11, 36, 12, 5, 37, 13],\r\n\r\n        // 15\r\n        [5, 109, 87, 1, 110, 88],\r\n        [5, 65, 41, 5, 66, 42],\r\n        [5, 54, 24, 7, 55, 25],\r\n        [11, 36, 12],\r\n\r\n        // 16\r\n        [5, 122, 98, 1, 123, 99],\r\n        [7, 73, 45, 3, 74, 46],\r\n        [15, 43, 19, 2, 44, 20],\r\n        [3, 45, 15, 13, 46, 16],\r\n\r\n        // 17\r\n        [1, 135, 107, 5, 136, 108],\r\n        [10, 74, 46, 1, 75, 47],\r\n        [1, 50, 22, 15, 51, 23],\r\n        [2, 42, 14, 17, 43, 15],\r\n\r\n        // 18\r\n        [5, 150, 120, 1, 151, 121],\r\n        [9, 69, 43, 4, 70, 44],\r\n        [17, 50, 22, 1, 51, 23],\r\n        [2, 42, 14, 19, 43, 15],\r\n\r\n        // 19\r\n        [3, 141, 113, 4, 142, 114],\r\n        [3, 70, 44, 11, 71, 45],\r\n        [17, 47, 21, 4, 48, 22],\r\n        [9, 39, 13, 16, 40, 14],\r\n\r\n        // 20\r\n        [3, 135, 107, 5, 136, 108],\r\n        [3, 67, 41, 13, 68, 42],\r\n        [15, 54, 24, 5, 55, 25],\r\n        [15, 43, 15, 10, 44, 16],\r\n\r\n        // 21\r\n        [4, 144, 116, 4, 145, 117],\r\n        [17, 68, 42],\r\n        [17, 50, 22, 6, 51, 23],\r\n        [19, 46, 16, 6, 47, 17],\r\n\r\n        // 22\r\n        [2, 139, 111, 7, 140, 112],\r\n        [17, 74, 46],\r\n        [7, 54, 24, 16, 55, 25],\r\n        [34, 37, 13],\r\n\r\n        // 23\r\n        [4, 151, 121, 5, 152, 122],\r\n        [4, 75, 47, 14, 76, 48],\r\n        [11, 54, 24, 14, 55, 25],\r\n        [16, 45, 15, 14, 46, 16],\r\n\r\n        // 24\r\n        [6, 147, 117, 4, 148, 118],\r\n        [6, 73, 45, 14, 74, 46],\r\n        [11, 54, 24, 16, 55, 25],\r\n        [30, 46, 16, 2, 47, 17],\r\n\r\n        // 25\r\n        [8, 132, 106, 4, 133, 107],\r\n        [8, 75, 47, 13, 76, 48],\r\n        [7, 54, 24, 22, 55, 25],\r\n        [22, 45, 15, 13, 46, 16],\r\n\r\n        // 26\r\n        [10, 142, 114, 2, 143, 115],\r\n        [19, 74, 46, 4, 75, 47],\r\n        [28, 50, 22, 6, 51, 23],\r\n        [33, 46, 16, 4, 47, 17],\r\n\r\n        // 27\r\n        [8, 152, 122, 4, 153, 123],\r\n        [22, 73, 45, 3, 74, 46],\r\n        [8, 53, 23, 26, 54, 24],\r\n        [12, 45, 15, 28, 46, 16],\r\n\r\n        // 28\r\n        [3, 147, 117, 10, 148, 118],\r\n        [3, 73, 45, 23, 74, 46],\r\n        [4, 54, 24, 31, 55, 25],\r\n        [11, 45, 15, 31, 46, 16],\r\n\r\n        // 29\r\n        [7, 146, 116, 7, 147, 117],\r\n        [21, 73, 45, 7, 74, 46],\r\n        [1, 53, 23, 37, 54, 24],\r\n        [19, 45, 15, 26, 46, 16],\r\n\r\n        // 30\r\n        [5, 145, 115, 10, 146, 116],\r\n        [19, 75, 47, 10, 76, 48],\r\n        [15, 54, 24, 25, 55, 25],\r\n        [23, 45, 15, 25, 46, 16],\r\n\r\n        // 31\r\n        [13, 145, 115, 3, 146, 116],\r\n        [2, 74, 46, 29, 75, 47],\r\n        [42, 54, 24, 1, 55, 25],\r\n        [23, 45, 15, 28, 46, 16],\r\n\r\n        // 32\r\n        [17, 145, 115],\r\n        [10, 74, 46, 23, 75, 47],\r\n        [10, 54, 24, 35, 55, 25],\r\n        [19, 45, 15, 35, 46, 16],\r\n\r\n        // 33\r\n        [17, 145, 115, 1, 146, 116],\r\n        [14, 74, 46, 21, 75, 47],\r\n        [29, 54, 24, 19, 55, 25],\r\n        [11, 45, 15, 46, 46, 16],\r\n\r\n        // 34\r\n        [13, 145, 115, 6, 146, 116],\r\n        [14, 74, 46, 23, 75, 47],\r\n        [44, 54, 24, 7, 55, 25],\r\n        [59, 46, 16, 1, 47, 17],\r\n\r\n        // 35\r\n        [12, 151, 121, 7, 152, 122],\r\n        [12, 75, 47, 26, 76, 48],\r\n        [39, 54, 24, 14, 55, 25],\r\n        [22, 45, 15, 41, 46, 16],\r\n\r\n        // 36\r\n        [6, 151, 121, 14, 152, 122],\r\n        [6, 75, 47, 34, 76, 48],\r\n        [46, 54, 24, 10, 55, 25],\r\n        [2, 45, 15, 64, 46, 16],\r\n\r\n        // 37\r\n        [17, 152, 122, 4, 153, 123],\r\n        [29, 74, 46, 14, 75, 47],\r\n        [49, 54, 24, 10, 55, 25],\r\n        [24, 45, 15, 46, 46, 16],\r\n\r\n        // 38\r\n        [4, 152, 122, 18, 153, 123],\r\n        [13, 74, 46, 32, 75, 47],\r\n        [48, 54, 24, 14, 55, 25],\r\n        [42, 45, 15, 32, 46, 16],\r\n\r\n        // 39\r\n        [20, 147, 117, 4, 148, 118],\r\n        [40, 75, 47, 7, 76, 48],\r\n        [43, 54, 24, 22, 55, 25],\r\n        [10, 45, 15, 67, 46, 16],\r\n\r\n        // 40\r\n        [19, 148, 118, 6, 149, 119],\r\n        [18, 75, 47, 31, 76, 48],\r\n        [34, 54, 24, 34, 55, 25],\r\n        [20, 45, 15, 61, 46, 16]\r\n    ];\r\n\r\n    /**\r\n     * 根据数据获取对应版本\r\n     * @return {[type]} [description]\r\n     */\r\n    QRCodeAlg.prototype.getRightType = function () {\r\n        for (var typeNumber = 1; typeNumber < 41; typeNumber++) {\r\n            var rsBlock = RS_BLOCK_TABLE[(typeNumber - 1) * 4 + this.errorCorrectLevel];\r\n            if (rsBlock == undefined) {\r\n                throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + this.errorCorrectLevel);\r\n            }\r\n            var length = rsBlock.length / 3;\r\n            var totalDataCount = 0;\r\n            for (var i = 0; i < length; i++) {\r\n                var count = rsBlock[i * 3 + 0];\r\n                var dataCount = rsBlock[i * 3 + 2];\r\n                totalDataCount += dataCount * count;\r\n            }\r\n            var lengthBytes = typeNumber > 9 ? 2 : 1;\r\n            if (this.utf8bytes.length + lengthBytes < totalDataCount || typeNumber == 40) {\r\n                this.typeNumber = typeNumber;\r\n                this.rsBlock = rsBlock;\r\n                this.totalDataCount = totalDataCount;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    //---------------------------------------------------------------------\r\n    // QRBitBuffer\r\n    //---------------------------------------------------------------------\r\n    function QRBitBuffer() {\r\n        this.buffer = new Array();\r\n        this.length = 0;\r\n    }\r\n    QRBitBuffer.prototype = {\r\n        get: function (index) {\r\n            var bufIndex = Math.floor(index / 8);\r\n            return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1);\r\n        },\r\n        put: function (num, length) {\r\n            for (var i = 0; i < length; i++) {\r\n                this.putBit(((num >>> (length - i - 1)) & 1));\r\n            }\r\n        },\r\n        putBit: function (bit) {\r\n            var bufIndex = Math.floor(this.length / 8);\r\n            if (this.buffer.length <= bufIndex) {\r\n                this.buffer.push(0);\r\n            }\r\n            if (bit) {\r\n                this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\r\n            }\r\n            this.length++;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // xzedit\r\n    let qrcodeAlgObjCache = [];\r\n    /**\r\n     * 二维码构造函数，主要用于绘制\r\n     * @param  {参数列表} opt 传递参数\r\n     * @return {}\r\n     */\r\n    QRCode = function (opt) {\r\n        //设置默认参数\r\n        this.options = {\r\n            text: '',\r\n            size: 256,\r\n            correctLevel: 3,\r\n            background: '#ffffff',\r\n            foreground: '#000000',\r\n            pdground: '#000000',\r\n            image: '',\r\n            imageSize: 30,\r\n            canvasId: opt.canvasId,\r\n            context: opt.context,\r\n            usingComponents: opt.usingComponents,\r\n            showLoading: opt.showLoading,\r\n            loadingText: opt.loadingText,\r\n        };\r\n        if (typeof opt === 'string') { // 只编码ASCII字符串\r\n            opt = {\r\n                text: opt\r\n            };\r\n        }\r\n        if (opt) {\r\n            for (var i in opt) {\r\n                this.options[i] = opt[i];\r\n            }\r\n        }\r\n        //使用QRCodeAlg创建二维码结构\r\n        var qrCodeAlg = null;\r\n        for (var i = 0, l = qrcodeAlgObjCache.length; i < l; i++) {\r\n            if (qrcodeAlgObjCache[i].text == this.options.text && qrcodeAlgObjCache[i].text.correctLevel == this.options.correctLevel) {\r\n                qrCodeAlg = qrcodeAlgObjCache[i].obj;\r\n                break;\r\n            }\r\n        }\r\n        if (i == l) {\r\n            qrCodeAlg = new QRCodeAlg(this.options.text, this.options.correctLevel);\r\n            qrcodeAlgObjCache.push({\r\n                text: this.options.text,\r\n                correctLevel: this.options.correctLevel,\r\n                obj: qrCodeAlg\r\n            });\r\n        }\r\n        /**\r\n         * 计算矩阵点的前景色\r\n         * @param {Obj} config\r\n         * @param {Number} config.row 点x坐标\r\n         * @param {Number} config.col 点y坐标\r\n         * @param {Number} config.count 矩阵大小\r\n         * @param {Number} config.options 组件的options\r\n         * @return {String}\r\n         */\r\n        let getForeGround = function (config) {\r\n            var options = config.options;\r\n            if (options.pdground && (\r\n                (config.row > 1 && config.row < 5 && config.col > 1 && config.col < 5) ||\r\n                (config.row > (config.count - 6) && config.row < (config.count - 2) && config.col > 1 && config.col < 5) ||\r\n                (config.row > 1 && config.row < 5 && config.col > (config.count - 6) && config.col < (config.count - 2))\r\n            )) {\r\n                return options.pdground;\r\n            }\r\n            return options.foreground;\r\n        }\r\n        // 创建canvas\r\n        let createCanvas = function (options) {\r\n            if (options.showLoading) {\r\n                uni.showLoading({\r\n                    title: options.loadingText,\r\n                    mask: true\r\n                });\r\n            }\r\n            var ctx = uni.createCanvasContext(options.canvasId, options.context);\r\n            var count = qrCodeAlg.getModuleCount();\r\n            var ratioSize = options.size;\r\n            var ratioImgSize = options.imageSize;\r\n            //计算每个点的长宽\r\n            var tileW = (ratioSize / count).toPrecision(4);\r\n            var tileH = (ratioSize / count).toPrecision(4);\r\n            //绘制\r\n            for (var row = 0; row < count; row++) {\r\n                for (var col = 0; col < count; col++) {\r\n                    var w = (Math.ceil((col + 1) * tileW) - Math.floor(col * tileW));\r\n                    var h = (Math.ceil((row + 1) * tileW) - Math.floor(row * tileW));\r\n                    var foreground = getForeGround({\r\n                        row: row,\r\n                        col: col,\r\n                        count: count,\r\n                        options: options\r\n                    });\r\n                    ctx.setFillStyle(qrCodeAlg.modules[row][col] ? foreground : options.background);\r\n                    ctx.fillRect(Math.round(col * tileW), Math.round(row * tileH), w, h);\r\n                }\r\n            }\r\n            if (options.image) {\r\n                var x = Number(((ratioSize - ratioImgSize) / 2).toFixed(2));\r\n                var y = Number(((ratioSize - ratioImgSize) / 2).toFixed(2));\r\n                drawRoundedRect(ctx, x, y, ratioImgSize, ratioImgSize, 2, 6, true, true)\r\n                ctx.drawImage(options.image, x, y, ratioImgSize, ratioImgSize);\r\n                // 画圆角矩形\r\n                function drawRoundedRect(ctxi, x, y, width, height, r, lineWidth, fill, stroke) {\r\n                    ctxi.setLineWidth(lineWidth);\r\n                    ctxi.setFillStyle(options.background);\r\n                    ctxi.setStrokeStyle(options.background);\r\n                    ctxi.beginPath(); // draw top and top right corner \r\n                    ctxi.moveTo(x + r, y);\r\n                    ctxi.arcTo(x + width, y, x + width, y + r, r); // draw right side and bottom right corner \r\n                    ctxi.arcTo(x + width, y + height, x + width - r, y + height, r); // draw bottom and bottom left corner \r\n                    ctxi.arcTo(x, y + height, x, y + height - r, r); // draw left and top left corner \r\n                    ctxi.arcTo(x, y, x + r, y, r);\r\n                    ctxi.closePath();\r\n                    if (fill) {\r\n                        ctxi.fill();\r\n                    }\r\n                    if (stroke) {\r\n                        ctxi.stroke();\r\n                    }\r\n                }\r\n            }\r\n            setTimeout(() => {\r\n                ctx.draw(true, () => {\r\n                    // 保存到临时区域\r\n                    setTimeout(() => {\r\n                        uni.canvasToTempFilePath({\r\n                            width: options.width,\r\n                            height: options.height,\r\n                            destWidth: options.width,\r\n                            destHeight: options.height,\r\n                            canvasId: options.canvasId,\r\n                            quality: Number(1),\r\n                            success: function (res) {\r\n                                if (options.cbResult) {\r\n                                    options.cbResult(res.tempFilePath)\r\n                                }\r\n                            },\r\n                            fail: function (res) {\r\n                                if (options.cbResult) {\r\n                                    options.cbResult(res)\r\n                                }\r\n                            },\r\n                            complete: function () {\r\n                                if (options.showLoading){\r\n                                    uni.hideLoading();\r\n                                }\r\n                            },\r\n                        }, options.context);\r\n                    }, options.text.length + 100);\r\n                });\r\n            }, options.usingComponents ? 0 : 150);\r\n        }\r\n        createCanvas(this.options);\r\n        // 空判定\r\n        let empty = function (v) {\r\n            let tp = typeof v,\r\n                rt = false;\r\n            if (tp == \"number\" && String(v) == \"\") {\r\n                rt = true\r\n            } else if (tp == \"undefined\") {\r\n                rt = true\r\n            } else if (tp == \"object\") {\r\n                if (JSON.stringify(v) == \"{}\" || JSON.stringify(v) == \"[]\" || v == null) rt = true\r\n            } else if (tp == \"string\") {\r\n                if (v == \"\" || v == \"undefined\" || v == \"null\" || v == \"{}\" || v == \"[]\") rt = true\r\n            } else if (tp == \"function\") {\r\n                rt = false\r\n            }\r\n            return rt\r\n        }\r\n    };\r\n    QRCode.prototype.clear = function (fn) {\r\n        var ctx = uni.createCanvasContext(this.options.canvasId, this.options.context)\r\n        ctx.clearRect(0, 0, this.options.size, this.options.size)\r\n        ctx.draw(false, () => {\r\n            if (fn) {\r\n                fn()\r\n            }\r\n        })\r\n    };\r\n})()\r\n\r\nexport default QRCode"],"sourceRoot":""}